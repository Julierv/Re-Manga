{"ast":null,"code":"var _jsxFileName = \"/Users/josepearldrought/repos/projects/react-test/manga-app/src/components/MangaDetails.js\",\n  _s = $RefreshSig$();\n// src/components/MangaDetails.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MangaDetails = ({\n  match\n}) => {\n  _s();\n  const {\n    name\n  } = match.params;\n  const [cover, setCover] = useState('');\n  const [volumes, setVolumes] = useState([]);\n  useEffect(() => {\n    // Fetch manga cover based on the manga name\n    axios.get(`https://34.173.150.41:3003/api/cover/${name}`).then(response => {\n      setCover(response.data);\n    }).catch(error => {\n      console.error(`Error fetching cover for ${name}:`, error);\n    });\n\n    // Fetch list of volumes based on the manga name\n    axios.get(`https://34.173.150.41:3003/api/manga/${name}/nums`).then(response => {\n      // Parse and sort volumes numerically\n      const sortedVolumes = response.data.sort((a, b) => {\n        const numA = parseInt(a.match(/\\d+/)[0], 10);\n        const numB = parseInt(b.match(/\\d+/)[0], 10);\n        return numA - numB;\n      });\n      setVolumes(sortedVolumes);\n    }).catch(error => {\n      console.error(`Error fetching volumes for ${name}:`, error);\n    });\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [name, \" Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: cover,\n        alt: `${name} Cover`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Volumes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: volumes.map(volume => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: volume\n      }, volume, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MangaDetails, \"AWUvKEytNjtKIH3gZ3H97Oy0+bY=\");\n_c = MangaDetails;\nexport default MangaDetails;\nvar _c;\n$RefreshReg$(_c, \"MangaDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MangaDetails","match","_s","name","params","cover","setCover","volumes","setVolumes","get","then","response","data","catch","error","console","sortedVolumes","sort","a","b","numA","parseInt","numB","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","map","volume","_c","$RefreshReg$"],"sources":["/Users/josepearldrought/repos/projects/react-test/manga-app/src/components/MangaDetails.js"],"sourcesContent":["// src/components/MangaDetails.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst MangaDetails = ({ match }) => {\n  const { name } = match.params;\n  const [cover, setCover] = useState('');\n  const [volumes, setVolumes] = useState([]);\n\n  useEffect(() => {\n    // Fetch manga cover based on the manga name\n    axios.get(`https://34.173.150.41:3003/api/cover/${name}`)\n      .then(response => {\n        setCover(response.data);\n      })\n      .catch(error => {\n        console.error(`Error fetching cover for ${name}:`, error);\n      });\n\n    // Fetch list of volumes based on the manga name\n    axios.get(`https://34.173.150.41:3003/api/manga/${name}/nums`)\n      .then(response => {\n        // Parse and sort volumes numerically\n        const sortedVolumes = response.data.sort((a, b) => {\n          const numA = parseInt(a.match(/\\d+/)[0], 10);\n          const numB = parseInt(b.match(/\\d+/)[0], 10);\n          return numA - numB;\n        });\n\n        setVolumes(sortedVolumes);\n      })\n      .catch(error => {\n        console.error(`Error fetching volumes for ${name}:`, error);\n      });\n  }, [name]);\n\n  return (\n    <div>\n      <h1>{name} Details</h1>\n      <div>\n        <img src={cover} alt={`${name} Cover`} />\n      </div>\n      <h2>Volumes</h2>\n      <ul>\n        {volumes.map(volume => (\n          <li key={volume}>{volume}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MangaDetails;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}